---
- name: Cancel provision tower job
  when:
  - "'deployerJob' in vars.anarchy_subject.status.towerJobs.provision | default({})"
  - "'completeTimestamp' not in vars.anarchy_subject.status.towerJobs.provision"
  awx.awx.tower_job_cancel:
    job_id: "{{ vars.anarchy_subject.status.towerJobs.provision.deployerJob }}"
    fail_if_not_running: false
    tower_host: "https://{{ babylon_tower.hostname }}/"
    tower_username: "{{ babylon_tower.user }}"
    tower_password: "{{ babylon_tower.password }}"
    validate_certs: false

- name: Run deployer destroy {{ anarchy_subject_name }}
  vars:
    new_subject_state: destroying
    tower_job_template_playbook: "{{ deployer_entry_points.destroy }}"
    tower_job_extra_vars: >-
      {{ vars.anarchy_subject.vars.job_vars | default({})
       | combine(vars.anarchy_governor.vars.job_vars, recursive=True)
       | combine(vars.dynamic_job_vars, recursive=True)
       | combine({
         "ACTION": "destroy",
         callback_url_var: anarchy_action_callback_url,
         callback_token_var: anarchy_action_callback_token,
       }, recursive=True)
      }}
  include_tasks:
    file: check-run-tower-job.yaml

- name: Schedule check for destroy of {{ anarchy_subject_name }}
  anarchy_continue_action:
    after: "{{ tower_job_check_interval }}"
...
