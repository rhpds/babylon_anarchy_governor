---
# Get sandbox to get the credential and perform deployer job
- when: sandbox_api_in_use
  include_tasks: sandbox_get.yaml

- name: Set Ansible controller access facts
  vars:
    job_info: >-
      {{ vars.anarchy_subject.status.towerJobs.provision | default({}) }}
  include_tasks:
    file: controller-access-facts.yaml

- name: Cancel provision tower job
  when:
  - "'deployerJob' in vars.anarchy_subject.status.towerJobs.provision | default({})"
  - "'completeTimestamp' not in vars.anarchy_subject.status.towerJobs.provision"
  awx.awx.job_cancel:
    controller_host: "https://{{ controller_host }}/"
    controller_username: "{{ controller_user }}"
    controller_password: "{{ controller_password }}"
    job_id: "{{ vars.anarchy_subject.status.towerJobs.provision.deployerJob }}"
    fail_if_not_running: false
    validate_certs: false
  register: r_job_cancel
  failed_when: r_job_cancel.failed and 'Unable to find job with id ' not in r_job_cancel.msg

- name: Run deployer destroy {{ anarchy_subject_name }}
  vars:
    new_subject_state: destroying
    job_template_playbook: "{{ deployer_entry_points.destroy }}"
    job_extra_vars: >-
      {{ vars.anarchy_subject.vars.job_vars | default({})
       | combine(vars.anarchy_governor.vars.job_vars, recursive=True)
       | combine(vars.dynamic_job_vars, recursive=True)
       | combine(__meta__.deployer.actions.destroy.extra_vars | default({"ACTION": "destroy"}))
       | combine({
         callback_url_var: anarchy_action_callback_url,
         callback_token_var: anarchy_action_callback_token,
       }, recursive=True)
      }}
  include_tasks:
    file: check-run-tower-job.yaml

- name: Schedule check for destroy of {{ anarchy_subject_name }}
  anarchy_continue_action:
    after: "{{ job_check_interval }}"
...
