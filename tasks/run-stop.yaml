---
- when: not __meta__.deployer.actions.stop.disable | default(false)
  block:
  # Get sandbox to get the credential and perform deployer job
  - when: sandbox_api_in_use | bool
    include_tasks: sandbox_get.yaml

  - name: Run deployer stop {{ anarchy_subject_name }}
    vars:
      new_subject_state: stopping
      job_template_playbook: "{{ deployer_entry_points.stop }}"
      job_extra_vars: >-
        {{ vars.anarchy_subject.vars.job_vars | default({})
         | combine(vars.anarchy_governor.vars.job_vars, recursive=True)
         | combine(vars.dynamic_job_vars, recursive=True)
         | combine(__meta__.deployer.actions.stop.extra_vars | default({"ACTION": "stop"}))
         | combine({
           callback_url_var: anarchy_action_callback_url,
           callback_token_var: anarchy_action_callback_token,
         }, recursive=True)
        }}
    include_tasks:
      file: check-run-tower-job.yaml

  - name: Schedule check for stop of {{ anarchy_subject_name }}
    anarchy_continue_action:
      after: "{{ job_check_interval }}"

# Run sandbox API stop action here only if deployer stop is disabled
# In case it's enabled, run sandbox API stop in handler-action-stop-*
- when: >-
    and sandbox_api_in_use | bool
    and __meta__.sandbox_api.actions.stop.enable | default(true)
    and __meta__.deployer.actions.stop.disable | default(false)
  block:
  - include_tasks: sandbox_api_login.yaml
  - include_tasks: sandbox_api_stop.yaml
...
