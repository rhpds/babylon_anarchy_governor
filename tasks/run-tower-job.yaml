---
- name: Tower organization {{ tower_organization_name }}
  awx.awx.tower_organization:
    name: "{{ tower_organization_name }}"
    tower_host: "https://{{ babylon_tower.hostname }}/"
    tower_username: "{{ babylon_tower.user }}"
    tower_password: "{{ babylon_tower.password }}"
    validate_certs: false

- name: Tower inventory {{ tower_inventory_name }}
  awx.awx.tower_inventory:
    name: "{{ tower_inventory_name }}"
    organization: "{{ tower_organization_name }}"
    tower_host: "https://{{ babylon_tower.hostname }}/"
    tower_username: "{{ babylon_tower.user }}"
    tower_password: "{{ babylon_tower.password }}"
    validate_certs: false

- name: Tower credentials
  loop: "{{ vault_credentials | default({}) | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  awx.awx.tower_credential:
    name: "{{ tower_organization_name }} {{ item.key }}"
    credential_type: Vault
    inputs:
      vault_id: "{{ item.key }}"
      vault_password: "{{ item.value }}"
    organization: "{{ tower_organization_name }}"
    tower_host: "https://{{ babylon_tower.hostname }}/"
    tower_username: "{{ babylon_tower.user }}"
    tower_password: "{{ babylon_tower.password }}"
    validate_certs: false

- name: Set __tower_project_scm_ref
  set_fact:
    __tower_project_scm_ref: >-
      {{ __meta__.deployer.scm_ref | default(
        lookup('git_tag_prefix', __meta__.deployer.git_tag_prefix, git_repo=__meta__.deployer.scm_url)
        if __meta__.deployer.git_tag_prefix is defined else 'main'
      ) }}

- name: Set __tower_project_name
  set_fact:
    __tower_project_name: >-
      {{ tower_organization_name }} {{ __meta__.deployer.scm_url }} ({{ __tower_project_scm_ref }})

- name: Tower project
  awx.awx.tower_project:
    name: "{{ __tower_project_name }}"
    scm_type: git
    scm_url: "{{ __meta__.deployer.scm_url }}"
    scm_branch: "{{ __tower_project_scm_ref }}"
    scm_update_on_launch: >-
      {{ __tower_project_scm_ref is not search('\d\.\d') }}
    scm_update_cache_timeout: >-
      {{ __meta__.deployer.scm_update_cache_timeout | default(30) }}
    organization: "{{ tower_organization_name }}"
    tower_host: "https://{{ babylon_tower.hostname }}/"
    tower_username: "{{ babylon_tower.user }}"
    tower_password: "{{ babylon_tower.password }}"
    validate_certs: false

- name: Tower Job Template block
  block:
  - name: Tower Job Template {{ tower_job_template_name }}
    vars:
      __query: >-
        [].key.join(' ', [`{{ tower_organization_name | to_json }}`, @])
    awx.awx.tower_job_template:
      name: "{{ tower_job_template_name }}"
      # Need to use to_json | from_json to avoid AnsibleUnicode error on json_query
      credentials: "{{ vault_credentials | default({}) | dict2items | to_json | from_json | json_query(__query) }}"
      custom_virtualenv: "{{ tower_job_template_custom_virtualenv | default(omit, true) }}"
      extra_vars: "{{ tower_job_extra_vars }}"
      playbook: "{{ tower_job_template_playbook }}"
      project: "{{ __tower_project_name }}"
      ask_inventory_on_launch: true
      tower_host: "https://{{ babylon_tower.hostname }}/"
      tower_username: "{{ babylon_tower.user }}"
      tower_password: "{{ babylon_tower.password }}"
      validate_certs: false
      timeout: "{{ tower_job_template_timeout }}"
    register: r_tower_job_template
    failed_when: r_tower_job_template is failed and 'already exists' not in r_tower_job_template.msg
  rescue:
  - name: Tower project update
    awx.awx.tower_project_update:
      name: "{{ __tower_project_name }}"
      organization: "{{ tower_organization_name }}"
      tower_host: "https://{{ babylon_tower.hostname }}/"
      tower_username: "{{ babylon_tower.user }}"
      tower_password: "{{ babylon_tower.password }}"
      validate_certs: false

  - name: Tower Job Template {{ tower_job_template_name }} (retry)
    vars:
      __query: >-
        [].key.join(' ', [`{{ tower_organization_name | to_json }}`, @])
    awx.awx.tower_job_template:
      name: "{{ tower_job_template_name }}"
      # Need to use to_json | from_json to avoid AnsibleUnicode error on json_query
      credentials: "{{ vault_credentials | default({}) | dict2items | to_json | from_json | json_query(__query) }}"
      custom_virtualenv: "{{ tower_job_template_custom_virtualenv | default(omit, true) }}"
      extra_vars: "{{ tower_job_extra_vars }}"
      playbook: "{{ tower_job_template_playbook }}"
      project: "{{ __tower_project_name }}"
      ask_inventory_on_launch: true
      tower_host: "https://{{ babylon_tower.hostname }}/"
      tower_username: "{{ babylon_tower.user }}"
      tower_password: "{{ babylon_tower.password }}"
      validate_certs: false
      timeout: "{{ tower_job_template_timeout }}"
    register: r_tower_job_template
    failed_when: r_tower_job_template is failed and 'already exists' not in r_tower_job_template.msg

- name: Launch Job {{ tower_job_template_name }}
  awx.awx.tower_job_launch:
    name: "{{ tower_job_template_name }}"
    inventory: "{{ tower_inventory_name }}"
    tower_host: "https://{{ babylon_tower.hostname }}/"
    tower_username: "{{ babylon_tower.user }}"
    tower_password: "{{ babylon_tower.password }}"
    validate_certs: false
  register: r_launch_job

- name: Set status in {{ anarchy_subject_name }}
  anarchy_subject_update:
    skip_update_processing: true
    metadata:
      labels:
        state: "{{ new_subject_state | default(current_state) }}"
    spec:
      vars:
        current_state: "{{ new_subject_state | default(current_state) }}"
        check_status_state: "{{ new_check_status_state | default(check_status_state) }}"
    status:
      towerJobs: >-
        {{ {
           anarchy_action_config_name: {
             "deployerJob": r_launch_job.id,
             "startTimestamp": anarchy_run_timestamp,
             "completeTimestamp": None,
             "towerHost": babylon_tower.hostname,
             "towerJobURL": babylon_tower.hostname ~ "#/jobs/" ~ r_launch_job.id ~ "/"
           }
        } }}
...
