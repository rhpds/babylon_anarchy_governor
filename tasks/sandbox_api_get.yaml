---
- name: Check if placement exists
  uri:
    headers:
      Authorization: Bearer {{ access_token }}
    url: "{{ sandbox_api_url }}/api/v1/placements/{{ uuid }}"
    method: GET
    status_code: [200]
  register: r_get_placement
  changed_when: false
  retries: "{{ sandbox_api_retries }}"
  delay: "{{ sandbox_api_delay }}"
  failed_when: r_get_placement.json.status | default('unknown') not in ['success', 'error']
  until: r_get_placement is ansible.builtin.success

# Placement found
- when: >-
    r_get_placement.status == 200
    and r_get_placement.json.resources | default([]) | length > 0
  block:
    - name: Set placement
      set_fact:
        placement: "{{ r_get_placement.json }}"

    - name: Inject vars into dynamic_job_vars
      set_fact:
        dynamic_job_vars: >-
          {{ vars.dynamic_job_vars
          | default({})
          | combine(r_get_placement.json | extract_sandboxes_vars, recursive=True) }}

    - name: Set sandbox for {{ anarchy_subject_name }}
      anarchy_subject_update:
        skip_update_processing: true
        metadata:
          labels: "{{ r_get_placement.json | extract_sandboxes_labels }}"
        spec:
          vars:
            job_vars: "{{ r_get_placement.json | extract_sandboxes_vars(creds=False) }}"
...
