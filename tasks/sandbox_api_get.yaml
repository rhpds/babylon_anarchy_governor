---
- name: Check if placement exists
  uri:
    headers:
      Authorization: Bearer {{ access_token }}
    url: "{{ sandbox_api_url }}/api/v1/placements/{{ uuid }}"
    method: GET
    status_code: [200, 404]
  retries: "{{ sandbox_api_retries }}"
  delay: "{{ sandbox_api_delay }}"
  register: r_get_placement
  until: r_get_placement is succeeded

# Placement found
- when: >-
    r_get_placement.status == 200
    and r_get_placement.json.resources | default([]) | length > 0
  block:
    - name: Set placement
      set_fact:
        placement: "{{ r_get_placement.json }}"

    - name: Save sandbox variables
      set_fact:
        sandbox_name: "{{ placement.resources[0].name }}"
        sandbox_zone: "{{ placement.resources[0].zone }}"
        sandbox_hosted_zone_id: "{{ placement.resources[0].hosted_zone_id }}"
        sandbox_account: "{{ placement.resources[0].account_id }}"
        sandbox_account_id: "{{ placement.resources[0].account_id }}"
        sandbox_aws_access_key_id: >-
          {{ (placement.resources[0].credentials
          | selectattr('kind', 'equalto', 'aws_iam_key')
          | selectattr('name', 'equalto', 'admin-key')
          | first
          ).get('aws_access_key_id') }}
        sandbox_aws_secret_access_key: >-
          {{ (placement.resources[0].credentials
          | selectattr('kind', 'equalto', 'aws_iam_key')
          | selectattr('name', 'equalto', 'admin-key')
          | first).get('aws_secret_access_key') }}

    - include_tasks: set_aws_sandbox.yaml
