---
- name: Get deployer job for {{ tower_job_action }} {{ anarchy_subject_name }}
  # The awx.awx collection does not have a tower_job_info module
  uri:
    url: https://{{ babylon_tower.hostname }}/api/v2/jobs/{{ tower_job_info.deployerJob }}/
    url_username: "{{ babylon_tower.user }}"
    url_password: "{{ babylon_tower.password }}"
    force_basic_auth: true
    # FIXME - Should validate certs
    validate_certs: false
    return_content: true
  register: r_api_response

- name: Handle tower job failed or canceled
  vars:
    __job_status: "{{ r_api_response.json.status }}"
  when: __job_status in ['canceled', 'failed']
  include_tasks:
    file: handle-action-{{ anarchy_action_config_name }}-{{ __job_status }}.yaml

- name: Handle tower job success when no callback received
  vars:
    __job_status: "{{ r_api_response.json.status }}"
    __job_name: "{{ r_api_response.json.name | default('UNKNOWN') }}"
  when: __job_status in ['successful']
  block:
    - name: Report callback not received for {{ anarchy_action_name }}
      debug:
        msg:
          - "No callback received for successful job: {{ __job_name }}"

    - name: Get provision info
      get_deployer_job_provision_info:
        host: "{{ babylon_tower.hostname }}"
        job_id: "{{ tower_job_info.deployerJob }}"
        user: "{{ babylon_tower.user }}"
        password: "{{ babylon_tower.password }}"
        # FIXME - Should validate certs
        validate_certs: false
      register: r_get_provision_info

    - name: Handle action complete for {{ anarchy_subject_name }}
      include_tasks: >-
        {%- if anarchy_action_config_name is defined -%}
        handle-action-{{ anarchy_action_config_name }}-complete.yaml
        {%- endif -%}
      vars:
        action_provision_data: "{{ r_get_provision_info.provision_data | default({}) }}"
        action_provision_message_body: "{{ r_get_provision_info.provision_message_body | default([]) }}"
        action_provision_messages: "{{ r_get_provision_info.provision_messages | default([]) }}"

- name: Schedule next check for {{ tower_job_action }} {{ anarchy_subject_name }}
  vars:
    __job_status: "{{ r_api_response.json.status }}"
  when: __job_status not in ['canceled', 'failed', 'successful']
  anarchy_continue_action:
    after: "{{ tower_job_check_interval }}"
...
