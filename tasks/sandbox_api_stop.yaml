---
- block:
  - name: Stop service using the Sandbox API
    uri:
      headers:
        Authorization: Bearer {{ access_token }}
      url: "{{ sandbox_api_url }}/api/v1/placements/{{ uuid }}/stop"
      body_format: json
      method: PUT
      status_code: [200, 202]
    register: r_stop
    retries: "{{ sandbox_api_retries }}"
    delay: "{{ sandbox_api_delay }}"
    until: r_stop is succeeded or r_start.status == 404

  - name: Set status in anarchy subject
    anarchy_subject_update:
      skip_update_processing: true
      metadata:
        labels:
          state: "stopping"
      spec:
        vars:
          current_state: "stopping"
      status:
        sandboxAPIJobs:
          stop:
            requestID: "{{ r_stop.json.request_id }}"
            message: "{{ r_stop.json.message }}"
            startTimestamp: "{{ now_time_utc }}"

  - name: Wait until async job is completed
    uri:
      headers:
        Authorization: Bearer {{ access_token }}
      url: "{{ sandbox_api_url }}/api/v1/requests/{{ r_stop.json.request_id }}/status"
      body_format: json
      status_code: 200
    register: r_request
    retries: "{{ sandbox_api_retries }}"
    delay: "{{ sandbox_api_delay }}"
    failed_when: >-
      r_request is failed
      or r_request.json.status | default('unknown') == 'error'
    until: >-
      r_request is succeeded
      and r_request.json.status in ["success", "error"]

  - when: r_request.json.status == "success"
    block:
    - name: Set state stopped for {{ anarchy_subject_name }}
      anarchy_subject_update:
        metadata:
          labels:
            state: stopped
        spec:
          vars:
            current_state: stopped
        status:
          sandboxAPIJobs:
            stop:
              completeTimestamp: "{{ now_time_utc }}"
              jobStatus: successful
              message: "{{ r_request.json.message | default('') }}"

    - name: Report action successful
      anarchy_finish_action:
        state: successful

  - when: r_request.json.status == "error"
    block:
    - name: Set state started for {{ anarchy_subject_name }}
      anarchy_subject_update:
        metadata:
          labels:
            state: stop-error
        spec:
          vars:
            current_state: stop-error
        status:
          sandboxAPIJobs:
            stop:
              completeTimestamp: "{{ now_time_utc }}"
              jobStatus: error
              message: "{{ r_request.json.message | default('') }}"

    - name: Report action failure
      anarchy_finish_action:
        state: error

  rescue:
  - name: Set state stop-error for {{ anarchy_subject_name }}
    anarchy_subject_update:
      metadata:
        labels:
          state: stop-error
      spec:
        vars:
          current_state: stop-error
          healthy: false
      status:
        sandboxAPIJobs:
          stop:
            completeTimestamp: "{{ now_time_utc }}"
            jobStatus: error
            message: "{{ r_request.json.message | default('') }}"

  - name: Report action failure
    anarchy_finish_action:
      state: error
...
