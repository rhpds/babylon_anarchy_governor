---
delete_on_failure: true

action_provision_data: "{{ anarchy_action_callback_data.data | default({}) }}"
action_provision_message_body: "{{ anarchy_action_callback_data.message_body | default([]) }}"
action_provision_messages: "{{ anarchy_action_callback_data.messages | default([]) }}"

action_retry_count: 0
action_retry_intervals:
- 1m
- 5m
- 10m
- 30m
- 1h
- 2h
- 4h
- 8h
- 16h
- 1d
action_retry_interval: >-
  {{ action_retry_intervals[action_retry_count | int]
    if action_retry_count | int < action_retry_intervals | length
    else action_retry_intervals[-1]
  }}

current_state: unknown
desired_state: unknown
check_status_request_timestamp: ''
last_check_status_request_timestamp: >-
  {{ vars.anarchy_subject_previous_state.spec.vars.check_status_request_timestamp | default('') }}
check_status_state: null

dynamic_job_vars: {}

preserve_job_vars:
- aws_region
- region

# Default check interval for tower job status
tower_job_check_interval: 5m

# AnarchyGovernor controls __meta__ settings.
__meta__: "{{ vars.anarchy_governor.vars.job_vars.__meta__ }}"

# Name of variables to set in job vars for the deployer to callback to Anarchy
# to notify status change, currently just on successful completion.
callback_url_var: >-
  {{ __meta__.deployer.callback_url_var | default("agnosticd_callback_url") }}
callback_token_var: >-
  {{ __meta__.deployer.callback_token_var | default("agnosticd_callback_token") }}

ansible_control_plane: >-
  {{ __meta__.ansible_control_plane.type | default('tower') }}

tower_maximum_job_count: >-
  {{ __meta__.tower.maximum_job_count | default(200) }}

tower_organization_name: >-
  {{ __meta__.tower.organization | default('babylon') }}
tower_inventory_name: >-
  {{ tower_organization_name }} {{ __meta__.tower.inventory | default('default') }}
tower_job_template_name: >-
  {{ tower_organization_name }} {{ anarchy_action_name }} {{ vars.anarchy_subject.vars.job_vars.uuid }}
tower_job_template_timeout: >-
  {{ __meta__.tower.timeout | default(10800) }}
tower_job_template_custom_virtualenv: >-
  {%- if ansible_control_plane == 'tower' and
  __meta__.deployer.virtualenv | default('') != '' -%}
    {%- if __meta__.deployer.virtualenv.startswith('/') -%}
      {{ __meta__.deployer.virtualenv }}
    {%- else -%}
      {{ tower_job_template_custom_virtualenv_basedir }}/{{ __meta__.deployer.virtualenv }}
    {%- endif -%}
  {%- endif -%}

tower_job_template_custom_virtualenv_basedir: /opt/rh/virtualenvs

############## Execution Environment #################
# Define execution environment in case automation-controller is selected
execution_environment: >-
  {%- if ansible_control_plane == 'controller' -%}
  {{ __meta__.deployer.execution_environment
  | default({}) }}
  {%- endif -%}

# Gather entry points for actions.
# If disable is set for action then default entry point to empty string.
deployer_entry_points:
  destroy: >-
    {{ __meta__.deployer.actions.destroy.disable | default(false) | bool | ternary('',
     __meta__.deployer.actions.destroy.entry_point
     | default(__meta__.deployer.entry_points.destroy)
     | default(__meta__.deployer.entry_point)
     | default('ansible/destroy.yml')
    )}}
  # Note, provision entry point cannot be disabled.
  provision: >-
    {{ __meta__.deployer.actions.provision.entry_point
     | default(__meta__.deployer.entry_points.provision)
     | default(__meta__.deployer.entry_point)
     | default('ansible/main.yml')
    }}
  start: >-
    {{ __meta__.deployer.actions.start.disable | default(false) | bool | ternary('',
     __meta__.deployer.actions.start.entry_point
     | default(__meta__.deployer.entry_points.start)
     | default(__meta__.deployer.entry_point)
     | default('ansible/lifecycle_entry_point.yml')
    )}}
  status: >-
    {{ __meta__.deployer.actions.status.disable | default(false) | bool | ternary('',
     __meta__.deployer.actions.status.entry_point
     | default(__meta__.deployer.entry_points.status)
     | default(__meta__.deployer.entry_point)
     | default('ansible/lifecycle_entry_point.yml')
    )}}
  stop: >-
    {{ __meta__.deployer.actions.stop.disable | default(false) | bool | ternary('',
     __meta__.deployer.actions.stop.entry_point
     | default(__meta__.deployer.entry_points.stop)
     | default(__meta__.deployer.entry_point)
     | default('ansible/lifecycle_entry_point.yml')
    )}}
  update: >-
    {{ __meta__.deployer.actions.stop.disable | default(false) | bool | ternary('',
     __meta__.deployer.actions['update'].entry_point
     | default(__meta__.deployer.entry_points['update'])
     | default(__meta__.deployer.entry_point)
     | default('ansible/update.yml')
    )}}
